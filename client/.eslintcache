[{"F:\\Working Place\\SOFT_LAB_IT\\Halal Dokan\\application\\client\\src\\App.js":"1","F:\\Working Place\\SOFT_LAB_IT\\Halal Dokan\\application\\client\\src\\pages\\customer\\ShippingPage.js":"2","F:\\Working Place\\SOFT_LAB_IT\\Halal Dokan\\application\\client\\src\\pages\\Cart.js":"3"},{"size":4737,"mtime":1611885457862,"results":"4","hashOfConfig":"5"},{"size":5668,"mtime":1611886998271,"results":"6","hashOfConfig":"5"},{"size":11731,"mtime":1611886951838,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xu1a93",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"F:\\Working Place\\SOFT_LAB_IT\\Halal Dokan\\application\\client\\src\\App.js",[],"F:\\Working Place\\SOFT_LAB_IT\\Halal Dokan\\application\\client\\src\\pages\\customer\\ShippingPage.js",["15","16"],"F:\\Working Place\\SOFT_LAB_IT\\Halal Dokan\\application\\client\\src\\pages\\Cart.js",["17"],"import React, {useState, useEffect} from 'react';\r\nimport './Cart.css'\r\nimport { connect } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport { productQuantity, removeFromBusket, orderedProducts, setBusketFromDB } from '../store/actions/busketActions'\r\nimport {loginSideBar} from '../store/actions/sideBarAction'\r\n\r\nimport { FaTrash } from 'react-icons/fa'\r\n\r\nimport { Table } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nimport Loading from '../components/Loading'\r\n\r\n\r\n// import {cartSideBar__off} from '../store/actions/sideBarAction'\r\n// import axios from 'axios';\r\n\r\nconst Cart = (props) => {\r\n    const [cart_products, setCart_products] = useState('')\r\n    const [subTotal, setSubTotal] = useState('')\r\n\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // if(!props.customer.customerLoggedIn) {\r\n            const fetchData = async () => {\r\n                let cartProducts = []\r\n                for(let i = 0; i < props.busket.cart_products.length; i++ ) {\r\n                    let {data} = await axios.get(`http://localhost:8080/api/product/get-single-product-by-id/${props.busket.cart_products[i]._id}`)\r\n                    cartProducts.push({\r\n                        _id: data.product._id,\r\n                        productName: data.product.productName,\r\n                        salePrice: data.product.salePrice,\r\n                        quantity: props.busket.cart_products[i].quantity,\r\n                        productImage: data.product.productImages[0],\r\n                    })\r\n                }\r\n              \r\n                setCart_products(cartProducts)\r\n                if(cartProducts.length > 0) {\r\n                    let total = cartProducts.map(p => { return p.salePrice * p.quantity })\r\n                    setSubTotal(total.reduce((a, b) => a + b, 0))\r\n                }\r\n            }\r\n           fetchData()\r\n        // }\r\n    }, [props.busket.busketNumbers])\r\n\r\n\r\n\r\n        // fetch cart from customer database\r\n        // useEffect(() => {\r\n        //     if(props.customer.customerLoggedIn) {\r\n        //         let cartProducts = []\r\n\r\n        //         axios.get(`http://localhost:8080/api/customer/loginCustomerInfo`, {\r\n        //             headers: {\r\n        //                 Authorization: `Bearer ${props.customer.customerToken}`\r\n        //             }\r\n        //         }) \r\n        //         .then(res => {\r\n        //             if(res.data.customerInfo.cart.length !== 0) {\r\n        //                 // return console.log(res.data.customerInfo)\r\n        //                 // setCart_products (res.data.customerInfo.cart)\r\n        //                 let quantity = res.data.customerInfo.cart.map(p => {return p.quantity})   \r\n        //                 let busketNumbers = quantity.reduce((a, b) => a + b, 0)\r\n        //                 props.setBusketFromDB(res.data.customerInfo.cart, busketNumbers)\r\n        //             }\r\n        //         })\r\n        //         .catch(e => console.log(e))\r\n\r\n\r\n        //         const fetchData = async() => {\r\n        //             for(let i = 0; i < props.busket.cart_products.length; i++ ) {\r\n        //                 let {data} = await axios.get(`http://localhost:8080/api/product/get-single-product-by-id/${props.busket.cart_products[i]._id}`)\r\n        //                 cartProducts.push({\r\n        //                     _id: data.product._id,\r\n        //                     productName: data.product.productName,\r\n        //                     salePrice: data.product.salePrice,\r\n        //                     quantity: props.busket.cart_products[i].quantity,\r\n        //                     productImage: data.product.productImages[0],\r\n        //                 })\r\n        //             }\r\n        //             setCart_products(cartProducts)\r\n        //             if(cartProducts.length > 0) {\r\n        //                 let total = cartProducts.map(p => { return p.salePrice * p.quantity })\r\n        //                 setSubTotal(total.reduce((a, b) => a + b, 0))\r\n        //             }\r\n        //         }\r\n        //         fetchData()\r\n\r\n        //         axios.put(`http://localhost:8080/api/customer/editInfo`, props.busket.cart_products, {\r\n        //             headers: {\r\n        //                 'Authorization': `Bearer ${props.customer.customerToken}` \r\n        //             }\r\n        //         })\r\n\r\n\r\n        //     }\r\n        // },[props.busket.busketNumbers])\r\n\r\n\r\n\r\n\r\n    // let fetchData = async() => {\r\n    //     props.busket.cart_products.map(async busket_product => {  \r\n    //         let {data} =  await axios.get(`http://localhost:8080/api/product/get-single-product-by-id/${busket_product._id}`)\r\n    //         busket_product.productName = data.product.productName\r\n    //         busket_product.salePrice = data.product.salePrice\r\n    //         busket_product.productImage = data.product.productImages[0]\r\n    //    })\r\n      \r\n    // }\r\n\r\n    // fetchData()\r\n\r\n    // useEffect(() => {\r\n        \r\n    //     // console.log(props.busket.cart_products) \r\n    //     let fetchProducts = []\r\n\r\n    //      for(let i=0; i<props.busket.cart_products.length; i++) {\r\n    //          axios.get(`http://localhost:8080/api/product/get-single-product-by-id/${props.busket.cart_products[i]._id}`)\r\n    //          .then(res => {\r\n    //             let product = res.data\r\n    //             product.quantity = props.busket.cart_products[i].quantity ? props.busket.cart_products[i].quantity : 1 \r\n    //             product.size  = props.busket.cart_products[i].size ? props.busket.cart_products[i].size : ''\r\n    //             product.color = props.busket.cart_products[i].color ? props.busket.cart_products[i].color: ''\r\n    //             product.weight = props.busket.cart_products[i].weight ? props.busket.cart_products[i].weight: 1\r\n    //             fetchProducts.push(product)\r\n    //             setLoading(false)\r\n    //          })\r\n    //      }\r\n\r\n    //     setCart_products(fetchProducts)\r\n        \r\n         \r\n    //     //  console.log(fetchProducts)\r\n       \r\n    // }, [props.busket.busketNumbers])\r\n\r\n\r\n    // let { cart_products } = props.busket\r\n    // let customerId = props.customer.customerInfo._id\r\n    // let customer = props.customer.customer\r\n\r\n    // let total = cart_products.length !== 0 && cart_products !== '' ? cart_products.map(p => { return p.salePrice * p.quantity }) : ''\r\n    // let subTotal = total.reduce((a, b) => a + b, 0)\r\n    \r\n    // let orderedProducts = props.busket.ordered_products\r\n\r\n    // orderedProducts.subTotal = subTotal\r\n    // orderedProducts.customer= customer ? customer : ''\r\n    // orderedProducts.customerId = customerId ? customerId : ''\r\n    // console.log(orderedProducts)\r\n\r\n    let checkOut = (e) => {\r\n        e.preventDefault()\r\n \r\n        props.customer.customerLoggedIn ?\r\n        history.push('/shippingInformation')\r\n        :\r\n        props.loginSideBar('open')\r\n        // props.orderedProducts(customerId, orderedProducts, props.history)\r\n    }\r\n\r\n    if(cart_products === '') {\r\n        return(\r\n            <div className=\"cart__loading\">\r\n                <Loading/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(cart_products.length === 0) {\r\n        return(\r\n            <div className=\"display-4 text-center\">Your Cart is Empty<br /> <Link className=\"text-success\" to=\"/\">Go to shop</Link></div>\r\n        )\r\n    }\r\n\r\n    if(cart_products.length !== 0) {\r\n       return(\r\n        <div className=\"cart\"> \r\n        <div className=\"\">\r\n            {/* {console.log(cart_products)}  */}\r\n            <div className=\"text-center text-dark\" style={{padding: \"2% 0\", background: '#eaeaea'}}>\r\n                <div className=\"h2 font-weight-bold\">My Cart</div>\r\n                <Link to=\"/\"><div className=\"badge badge-secondary text-center\">&#8594; Go To Shop</div></Link> \r\n            </div>\r\n            <div className=\"cart__content\">\r\n                    <div className=\"cart__details mt-5 px-3\">\r\n                        <Table  hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Product</th>\r\n                                    <th>Price</th>\r\n                                    <th>Quantity</th>\r\n                                    <th>Total</th>\r\n                                    <th>Remove</th>                                            \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {cart_products.map(p => (\r\n                                    <tr className=\"tableRow\">\r\n                                        <td><Link to={`/product/${p._id}`}><img className=\"img-thumbnail mr-3\" src={`/tempProductImages/${p.productImage}`} alt=\"\" />{p.productName}</Link></td>\r\n                                        <td>&#2547;{p.salePrice}</td>\r\n                                        <td>\r\n                                            <div className=\"productQuantityController d-flex font-weight-bolder\">\r\n                                                <div onClick={() => props.productQuantity('decrease', p._id)} className=\"\" style={{ cursor: 'pointer' }}>-</div>\r\n                                                <div className=\"mx-3\">{p.quantity}</div>\r\n                                                <div onClick={() => props.productQuantity('increase', p._id)} className=\"\" style={{ cursor: 'pointer' }}>+</div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>&#2547;{p.salePrice * p.quantity}</td>\r\n                                        <td>\r\n                                            <FaTrash onClick={() => props.removeFromBusket(p._id)} style={{ marginBottom: 7, cursor: 'pointer', color: \"#FE0000\"}}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    \r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <hr/>\r\n                    </div>\r\n                    <div className=\"checkOut text-right mt-4 px-3\">\r\n                        <div className=\"h3 font-weight-bold\">SubTotal Amount: <strong style={{color: \"#FE0000\"}}>&#2547;{subTotal}</strong></div>\r\n                        <p>Taxes, shipping and discounts codes calculated at checkout</p>\r\n                        <button onClick={checkOut} className=\"btn btn-primary mt-2\" style={{width: 300}}>CHECK OUT</button>\r\n                    </div>\r\n                    {/* warning alert starts */}\r\n                    {/* { warning === null ? \"\" : \r\n                    <div style={{position: \"fixed\", bottom: 0, left: 0, width: \"100%\", zIndex: 1000}} className=\"alert alert-warning alert-dismissible fade show text-center\" role=\"alert\">\r\n                        <MdReportProblem className=\"mb-1\"/><strong>&nbsp;&nbsp;&nbsp;{warning}</strong>\r\n                        <button onClick={e => setWarning(null)} type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    } */}\r\n                    {/* warning alert ends */}\r\n                </div>\r\n        </div>\r\n    </div>\r\n       )\r\n    }\r\n\r\n\r\n\r\n} \r\n\r\n    \r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    customer: state.customer,\r\n    busket: state.busket\r\n})\r\nexport default connect(mapStateToProps, { productQuantity, removeFromBusket, setBusketFromDB, orderedProducts, loginSideBar })(Cart);\r\n\r\n\r\n\r\n",{"ruleId":"18","severity":1,"message":"19","line":5,"column":10,"nodeType":"20","messageId":"21","endLine":5,"endColumn":14},{"ruleId":"22","severity":1,"message":"23","line":48,"column":8,"nodeType":"24","endLine":48,"endColumn":10,"suggestions":"25"},{"ruleId":"22","severity":1,"message":"26","line":51,"column":8,"nodeType":"24","endLine":51,"endColumn":36,"suggestions":"27"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'values'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["28"],"React Hook useEffect has a missing dependency: 'props.busket.cart_products'. Either include it or remove the dependency array.",["29"],{"desc":"30","fix":"31"},{"desc":"32","fix":"33"},"Update the dependencies array to be: [props, values]",{"range":"34","text":"35"},"Update the dependencies array to be: [props.busket.busketNumbers, props.busket.cart_products]",{"range":"36","text":"37"},[1379,1381],"[props, values]",[1926,1954],"[props.busket.busketNumbers, props.busket.cart_products]"]